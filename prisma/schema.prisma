// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  firstName    String   @db.VarChar(50)
  LastName     String   @db.VarChar(50)
  email        String   @db.VarChar(50)
  mobile       String   @db.VarChar(50)
  password     String   @db.VarChar(50)
  passwordHash String   @db.VarChar(50)
  registeredAt DateTime @default(now()) @db.Timestamp(0)
  lastLogin    DateTime @default(now()) @db.Timestamp(0)
  intro        String   @db.VarChar(50)
  created_at   DateTime @default(now()) @db.Timestamp(0)
  updated_at   DateTime @default(now()) @db.Timestamp(0)
  post         post[]
}

model post {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  authoorId     BigInt   @unique @db.UnsignedBigInt
  parentId     BigInt   @unique @db.UnsignedBigInt
  title         String          @db.VarChar(50)
  metaTitle     String          @db.VarChar(50)
  slug          String          @db.VarChar(50)
  summary       String          @db.TinyText
  published     Int             @db.TinyInt()
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  publishedAt   DateTime        @default(now()) @db.Timestamp(0)
  content       String          @db.Text
  user          user            @relation(fields: [authoorId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  post_tag      post_tag[]
  post_meta     post_meta[]
  post_comment  post_comment[]
  post_category post_category[]
}

model tag {
  id        BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  title     String     @db.VarChar(50)
  metaTitle String     @db.VarChar(50)
  slug      String     @db.VarChar(50)
  content   String     @db.Text
  post_tag  post_tag[]
}

model post_tag {
  postid BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  tagId  BigInt @unique @db.UnsignedBigInt

  tag  tag  @relation(fields: [tagId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  post post @relation(fields: [postid], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model post_meta {
  id      BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId  BigInt @unique @db.UnsignedBigInt
  key     String @db.VarChar(50)
  content String @db.Text
  post    post   @relation(fields: [postId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model post_comment {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  postId      BigInt  @unique @db.UnsignedBigInt
  parentId    BigInt   @unique @db.UnsignedBigInt
  title       String   @db.VarChar(50)
  published   Int      @db.TinyInt()
  created_at  DateTime @default(now()) @db.Timestamp(0)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  content     String   @db.Text
  post        post     @relation(fields: [postId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model category {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  parentId      BigInt       @unique @db.UnsignedBigInt
  metaTitle     String          @db.VarChar(50)
  slug          String          @db.VarChar(50)
  content       String          @db.Text
  post_category post_category[]
}

model post_category {
  postid     BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  categoryId BigInt   @unique @db.UnsignedBigInt
  category   category @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  post       post     @relation(fields: [postid], references: [id], onDelete: Restrict, onUpdate: Cascade)
}
